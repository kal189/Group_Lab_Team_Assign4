/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.AdminRole;

import Business.Business;
import javax.swing.JPanel;
import Business.Profiles.StudentProfile;
import UserInterface.WorkAreas.AdminRole.StudentDetailsJPanel;

/**
 *
 * @author aasikaleem
 */
public class ManageStudentsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageStudentsJPanel
     */
    Business business;
    JPanel CardSequencePanel;

  public ManageStudentsJPanel(Business bz, JPanel jp) {
    CardSequencePanel = jp;
    this.business = bz;
    initComponents();
    populateTable();
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblManageStudents = new javax.swing.JLabel();
        lblSearchby = new javax.swing.JLabel();
        cmbSearchType = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudents = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnViewDetails = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 204));

        lblManageStudents.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblManageStudents.setText("Manage Students");

        lblSearchby.setText("Search By:");

        cmbSearchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student ID", "Name", "Department", " " }));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Student ID", "Name", "Department", "Email"
            }
        ));
        jScrollPane1.setViewportView(tblStudents);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnViewDetails.setText("View Details");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSearchby)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblManageStudents)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(95, 95, 95)
                        .addComponent(btnViewDetails)
                        .addGap(65, 65, 65)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete)
                        .addGap(16, 16, 16))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblManageStudents)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearchby)
                    .addComponent(cmbSearchType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewDetails)
                    .addComponent(btnBack)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete))
                .addGap(47, 47, 47))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblStudents.getSelectedRow();
    
    if (selectedRow == -1) {
        javax.swing.JOptionPane.showMessageDialog(this,
            "Please select a student to view!",
            "No Selection",
            javax.swing.JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    String studentId = tblStudents.getValueAt(selectedRow, 0).toString();
    StudentProfile student = business.getStudentDirectory().findStudent(studentId);
    
    if (student != null) {
        StudentDetailsJPanel detailsPanel = new StudentDetailsJPanel(business, CardSequencePanel, student, this);CardSequencePanel.add("StudentDetails", detailsPanel);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }
    }//GEN-LAST:event_btnViewDetailsActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        

   CardSequencePanel.remove(this);
    ((java.awt.CardLayout) CardSequencePanel.getLayout()).previous(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        
        String searchType = (String) cmbSearchType.getSelectedItem();
    String searchText = txtSearch.getText().trim();
    
    if (searchText.isEmpty()) {
        populateTable();
        return;
    }
    
    javax.swing.table.DefaultTableModel model = 
        (javax.swing.table.DefaultTableModel) tblStudents.getModel();
    model.setRowCount(0);
    
    for (StudentProfile student : business.getStudentDirectory().getStudentList()) {
        boolean match = false;
        String personId = student.getPerson().getPersonId();
        String personName = student.getPerson().getName();
        
        if (searchType.equals("Student ID") && personId.toLowerCase().contains(searchText.toLowerCase())) {
            match = true;
        } else if (searchType.equals("Name") && personName.toLowerCase().contains(searchText.toLowerCase())) {
            match = true;
        } else if (searchType.equals("Department")) {
            match = true;
        }
        
        if (match) {
            Object[] row = new Object[4];
            row[0] = student.getPerson().getPersonId();
            row[1] = student.getPerson().getName();
            row[2] = "Information Systems";
            row[3] = student.getPerson().getEmail();
            model.addRow(row);
        }
    }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        
         int selectedRow = tblStudents.getSelectedRow();
    
    if (selectedRow == -1) {
        javax.swing.JOptionPane.showMessageDialog(this,
            "Please select a student to edit!",
            "No Selection",
            javax.swing.JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    javax.swing.JOptionPane.showMessageDialog(this,
        "Edit functionality coming soon!",
        "Info",
        javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
       int selectedRow = tblStudents.getSelectedRow();
    
    if (selectedRow == -1) {
        javax.swing.JOptionPane.showMessageDialog(this,
            "Please select a student to delete!",
            "No Selection",
            javax.swing.JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    String studentId = tblStudents.getValueAt(selectedRow, 0).toString();
    System.out.println("=== DELETE DEBUG ===");
    System.out.println("Student ID from table: '" + studentId + "'");
    System.out.println("ID length: " + studentId.length());
    
    int confirm = javax.swing.JOptionPane.showConfirmDialog(this,
        "Are you sure you want to delete student " + studentId + "?",
        "Confirm Delete",
        javax.swing.JOptionPane.YES_NO_OPTION);
    
    if (confirm == javax.swing.JOptionPane.YES_OPTION) {
        System.out.println("\nStudents in directory BEFORE delete:");
        for (StudentProfile sp : business.getStudentDirectory().getStudentList()) {
            String id = sp.getPerson().getPersonId();
            System.out.println("  ID: '" + id + "' (length: " + id.length() + ")");
        }
        
        boolean deleted = business.getStudentDirectory().deleteStudent(studentId);
        System.out.println("\nDelete returned: " + deleted);
        
        System.out.println("\nStudents in directory AFTER delete:");
        for (StudentProfile sp : business.getStudentDirectory().getStudentList()) {
            System.out.println("  ID: '" + sp.getPerson().getPersonId() + "'");
        }
        
        if (deleted) {
            javax.swing.JOptionPane.showMessageDialog(this,
                "Student deleted successfully!",
                "Success",
                javax.swing.JOptionPane.INFORMATION_MESSAGE);
            populateTable();
        } else {
            javax.swing.JOptionPane.showMessageDialog(this,
                "Student not found!",
                "Error",
                javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JComboBox<String> cmbSearchType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblManageStudents;
    private javax.swing.JLabel lblSearchby;
    private javax.swing.JTable tblStudents;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
public void populateTable() {
    javax.swing.table.DefaultTableModel model = 
        (javax.swing.table.DefaultTableModel) tblStudents.getModel();
    model.setRowCount(0);
    
    for (StudentProfile student : business.getStudentDirectory().getStudentList()) {
        Object[] row = new Object[4];
        row[0] = student.getPerson().getPersonId();
        row[1] = student.getPerson().getName();
        row[2] = "Information Systems";
        row[3] = student.getPerson().getEmail();
        model.addRow(row);
    }
}

}


