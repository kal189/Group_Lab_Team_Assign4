/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.FacultyRole;

import Business.Business;
import Business.Profiles.EmployeeProfile;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.util.HashMap;
import java.util.Map;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author saipraharshith
 */
public class PerformanceReportsJPanel extends javax.swing.JPanel {
    Business business;
    EmployeeProfile facultyProfile;
    JPanel CardSequencePanel;
    /**
     * Creates new form PerformanceReportsJPanel
     */
    public PerformanceReportsJPanel(Business bz, EmployeeProfile fp, JPanel jp) {
        this.business = bz;
        this.facultyProfile = fp;
        this.CardSequencePanel = jp;
        initComponents();
        setupTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblSemester = new javax.swing.JLabel();
        cmbSemester = new javax.swing.JComboBox<>();
        btnGenerate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblReport = new javax.swing.JTable();
        lblDistribution = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDistribution = new javax.swing.JTextArea();
        btnBack = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblTitle.setText("Performance Reports");

        lblSemester.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblSemester.setText("Select Semester:");

        cmbSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fall 2025", "Summer 2025", "Spring 2025" }));

        btnGenerate.setText("Generate Report");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        tblReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Course Code", "Average Grade", "Enrollment", "Pass Rate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblReport);

        lblDistribution.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblDistribution.setText("Grade Distribution:");

        txtDistribution.setEditable(false);
        txtDistribution.setColumns(40);
        txtDistribution.setRows(8);
        jScrollPane2.setViewportView(txtDistribution);

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnExport.setText("Export to CSV");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGenerate)
                .addGap(45, 45, 45)
                .addComponent(btnExport)
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(lblDistribution)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(lblSemester)
                        .addGap(235, 235, 235)
                        .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnBack)))
                .addContainerGap(324, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 67, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSemester)
                            .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGenerate)
                            .addComponent(btnExport))
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTitle))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(lblDistribution))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addComponent(btnBack)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        generateReport();
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        CardSequencePanel.remove(this);
    ((java.awt.CardLayout) CardSequencePanel.getLayout()).previous(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        exportReportToCSV();
    }//GEN-LAST:event_btnExportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JComboBox<String> cmbSemester;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDistribution;
    private javax.swing.JLabel lblSemester;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblReport;
    private javax.swing.JTextArea txtDistribution;
    // End of variables declaration//GEN-END:variables

    private void setupTable() {
        // Make table read-only
        tblReport.setDefaultEditor(Object.class, null);
        
        // Set column widths
        tblReport.getColumnModel().getColumn(0).setPreferredWidth(120); // Course Code
        tblReport.getColumnModel().getColumn(1).setPreferredWidth(120); // Average Grade
        tblReport.getColumnModel().getColumn(2).setPreferredWidth(100); // Enrollment
        tblReport.getColumnModel().getColumn(3).setPreferredWidth(100); // Pass Rate
    }

    private void generateReport() {
    String selectedSemester = (String) cmbSemester.getSelectedItem();
    
    // Clear previous report
    DefaultTableModel model = (DefaultTableModel) tblReport.getModel();
    model.setRowCount(0);
    
    // Different data per semester
    Object[][] courseData;
    
    if (selectedSemester.equals("Fall 2025")) {
        courseData = new Object[][] {
            {"INFO 5100", 91.2, 30, "96.7%"},
            {"INFO 6150", 87.5, 25, "92.0%"},
            {"INFO 5001", 89.8, 28, "89.3%"}
        };
    } else if (selectedSemester.equals("Summer 2025")) {
        courseData = new Object[][] {
            {"INFO 5100", 88.5, 28, "92.9%"},
            {"INFO 6150", 90.2, 22, "95.5%"}
        };
    } else { // Spring 2025
        courseData = new Object[][] {
            {"INFO 5100", 93.1, 32, "96.9%"},
            {"INFO 6150", 85.3, 24, "91.7%"},
            {"INFO 5001", 87.9, 26, "88.5%"}
        };
    }
    
    for (Object[] course : courseData) {
        model.addRow(course);
    }
    
    // Generate grade distribution for selected semester
    generateGradeDistribution(selectedSemester);
    
    javax.swing.JOptionPane.showMessageDialog(this,
        "Report generated for " + selectedSemester,
        "Success",
        javax.swing.JOptionPane.INFORMATION_MESSAGE);
}

    private void generateGradeDistribution(String semester) {
    // Different distribution per semester
    Map<String, Integer> distribution = new HashMap<>();
    int totalStudents;
    
    if (semester.equals("Fall 2025")) {
        distribution.put("A", 8);
        distribution.put("A-", 5);
        distribution.put("B+", 4);
        distribution.put("B", 6);
        distribution.put("B-", 3);
        distribution.put("C+", 2);
        distribution.put("C", 1);
        distribution.put("C-", 1);
        distribution.put("F", 0);
        totalStudents = 30;
    } else if (semester.equals("Summer 2025")) {
        distribution.put("A", 6);
        distribution.put("A-", 4);
        distribution.put("B+", 5);
        distribution.put("B", 3);
        distribution.put("B-", 2);
        distribution.put("C+", 1);
        distribution.put("C", 1);
        distribution.put("C-", 0);
        distribution.put("F", 0);
        totalStudents = 22;
    } else { // Spring 2025
        distribution.put("A", 9);
        distribution.put("A-", 6);
        distribution.put("B+", 5);
        distribution.put("B", 4);
        distribution.put("B-", 2);
        distribution.put("C+", 2);
        distribution.put("C", 1);
        distribution.put("C-", 1);
        distribution.put("F", 0);
        totalStudents = 30;
    }
    
    StringBuilder sb = new StringBuilder();
    sb.append("Grade Distribution for " + semester + ":\n");
    sb.append("=====================================\n\n");
    
    for (String grade : new String[]{"A", "A-", "B+", "B", "B-", "C+", "C", "C-", "F"}) {
        int count = distribution.get(grade);
        double percentage = (count * 100.0) / totalStudents;
        
        sb.append(String.format("%-3s: %2d students (%.1f%%)\n", 
            grade, count, percentage));
    }
    
    sb.append("\n=====================================\n");
    sb.append(String.format("Total Students: %d", totalStudents));
    
    txtDistribution.setText(sb.toString());
    }

    private void exportReportToCSV() {
        DefaultTableModel model = (DefaultTableModel) tblReport.getModel();
        
        if (model.getRowCount() == 0) {
            javax.swing.JOptionPane.showMessageDialog(this,
                "Please generate a report first!",
                "No Data",
                javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // File chooser for save location
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Save Report As");
        
        String semester = (String) cmbSemester.getSelectedItem();
        String defaultFileName = "Performance_Report_" + semester.replace(" ", "_") + ".csv";
        fileChooser.setSelectedFile(new java.io.File(defaultFileName));
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV Files (*.csv)", "csv");
        fileChooser.setFileFilter(filter);
        
        int result = fileChooser.showSaveDialog(this);
        
        if (result == JFileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();
            if (!filePath.toLowerCase().endsWith(".csv")) {
                filePath += ".csv";
            }
            
            try (FileWriter writer = new FileWriter(filePath)) {
                // Write header
                writer.append("Course Code,Average Grade,Enrollment,Pass Rate\n");
                
                // Write data rows
                for (int i = 0; i < model.getRowCount(); i++) {
                    writer.append(model.getValueAt(i, 0).toString());
                    writer.append(",");
                    writer.append(model.getValueAt(i, 1).toString());
                    writer.append(",");
                    writer.append(model.getValueAt(i, 2).toString());
                    writer.append(",");
                    writer.append(model.getValueAt(i, 3).toString());
                    writer.append("\n");
                }
                
                javax.swing.JOptionPane.showMessageDialog(this,
                    "Report exported successfully!\n\nFile: " + filePath,
                    "Export Successful",
                    javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            } catch (IOException e) {
                javax.swing.JOptionPane.showMessageDialog(this,
                    "Error exporting report: " + e.getMessage(),
                    "Export Failed",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
    }
}

