/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.FacultyRole;

import Business.Business;
import Business.Profiles.EmployeeProfile;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.File;


/**
 *
 * @author saipraharshith
 */
public class ManageCoursesJPanel extends javax.swing.JPanel {
    Business business;
    EmployeeProfile facultyProfile;
    JPanel CardSequencePanel;
    /**
     * Creates new form ManageCoursesJPanel
     */
    public ManageCoursesJPanel(Business bz, EmployeeProfile fp, JPanel jp) {
    this.business = bz;
    this.facultyProfile = fp;
    this.CardSequencePanel = jp;
    initComponents();
    setupTable();
    populateCourses();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourses = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnViewDetails = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnToggleEnrollment = new javax.swing.JButton();
        btnUploadSyllabus = new javax.swing.JButton();

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblTitle.setText("My Courses");

        tblCourses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Course Code", "Course Name", "Credits", "Enrollment", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCourses);

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnViewDetails.setText("View Details");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit Course");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnToggleEnrollment.setText("Toggle Enrollment");
        btnToggleEnrollment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToggleEnrollmentActionPerformed(evt);
            }
        });

        btnUploadSyllabus.setText("Upload/Modify Syllabus");
        btnUploadSyllabus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadSyllabusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnBack)
                        .addGap(18, 18, 18)
                        .addComponent(btnViewDetails)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEdit)
                        .addGap(18, 18, 18)
                        .addComponent(btnToggleEnrollment)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUploadSyllabus)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnViewDetails)
                    .addComponent(btnEdit)
                    .addComponent(btnToggleEnrollment)
                    .addComponent(btnUploadSyllabus))
                .addGap(37, 37, 37))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
    CardSequencePanel.remove(this);
    ((java.awt.CardLayout) CardSequencePanel.getLayout()).previous(CardSequencePanel);
                                       
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
    int selectedRow = tblCourses.getSelectedRow();
    if (selectedRow == -1) {
        javax.swing.JOptionPane.showMessageDialog(this,
            "Please select a course to view!",
            "No Selection",
            javax.swing.JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    String courseCode = tblCourses.getValueAt(selectedRow, 0).toString();
    String courseName = tblCourses.getValueAt(selectedRow, 1).toString();
    String credits = tblCourses.getValueAt(selectedRow, 2).toString();
    String enrollment = tblCourses.getValueAt(selectedRow, 3).toString();
    String status = tblCourses.getValueAt(selectedRow, 4).toString();
    
    javax.swing.JOptionPane.showMessageDialog(this,
        "Course Code: " + courseCode + "\n" +
        "Course Name: " + courseName + "\n" +
        "Credits: " + credits + "\n" +
        "Enrollment: " + enrollment + "\n" +
        "Status: " + status + "\n\n" +
        "Detailed editing coming soon!",
        "Course Details",
        javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnViewDetailsActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
    int selectedRow = tblCourses.getSelectedRow();
    if (selectedRow == -1) {
        javax.swing.JOptionPane.showMessageDialog(this,
            "Please select a course to edit!",
            "No Selection",
            javax.swing.JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    editCourse(selectedRow);  // ‚Üê CHANGED: Now calls editCourse method
                                       
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnToggleEnrollmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToggleEnrollmentActionPerformed
         int selectedRow = tblCourses.getSelectedRow();
    if (selectedRow == -1) {
        javax.swing.JOptionPane.showMessageDialog(this,
            "Please select a course first!",
            "No Selection",
            javax.swing.JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    String courseCode = tblCourses.getValueAt(selectedRow, 0).toString();
    toggleEnrollment(selectedRow);
    }//GEN-LAST:event_btnToggleEnrollmentActionPerformed

    private void btnUploadSyllabusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadSyllabusActionPerformed
        int selectedRow = tblCourses.getSelectedRow();
    if (selectedRow == -1) {
        javax.swing.JOptionPane.showMessageDialog(this,
            "Please select a course first!",
            "No Selection",
            javax.swing.JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    String courseCode = tblCourses.getValueAt(selectedRow, 0).toString();
    uploadSyllabus(courseCode);
    }//GEN-LAST:event_btnUploadSyllabusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnToggleEnrollment;
    private javax.swing.JButton btnUploadSyllabus;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblCourses;
    // End of variables declaration//GEN-END:variables


    private void setupTable() {
        // Make table read-only
        tblCourses.setDefaultEditor(Object.class, null);
        
        // Set column widths
        tblCourses.getColumnModel().getColumn(0).setPreferredWidth(100); // Course Code
        tblCourses.getColumnModel().getColumn(1).setPreferredWidth(300); // Course Name
        tblCourses.getColumnModel().getColumn(2).setPreferredWidth(60);  // Credits
        tblCourses.getColumnModel().getColumn(3).setPreferredWidth(100); // Enrollment
        tblCourses.getColumnModel().getColumn(4).setPreferredWidth(80);  // Status
    }

    private void populateCourses() {
        DefaultTableModel model = (DefaultTableModel) tblCourses.getModel();
        model.setRowCount(0); // Clear existing data
        
        // Sample course data - will be replaced with real data later
        Object[] row1 = {"INFO 5100", "Application Engineering & Development", 4, "25/30", "Open"};
        Object[] row2 = {"INFO 6150", "Web Design and User Experience", 4, "20/25", "Open"};
        Object[] row3 = {"INFO 5001", "Data Structures and Algorithms", 4, "28/30", "Closed"};
        
        model.addRow(row1);
        model.addRow(row2);
        model.addRow(row3);
    }
    
    private void uploadSyllabus(String courseCode) {
        // Create file chooser
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Select Syllabus File");
        
        // Filter for PDF and Word documents only
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Syllabus Files (*.pdf, *.doc, *.docx)", "pdf", "doc", "docx");
        fileChooser.setFileFilter(filter);
        
        int result = fileChooser.showOpenDialog(this);
        
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String fileName = selectedFile.getName();
            String filePath = selectedFile.getAbsolutePath();
            
            // Validate file extension
            String extension = fileName.substring(fileName.lastIndexOf(".") + 1).toLowerCase();
            if (!extension.equals("pdf") && !extension.equals("doc") && !extension.equals("docx")) {
                javax.swing.JOptionPane.showMessageDialog(this,
                    "Please select a PDF or Word document!",
                    "Invalid File Type",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // TODO: In real implementation, copy file to syllabus directory
            // and save path to database linked to course
            
            // Show success message for both upload and modify
            javax.swing.JOptionPane.showMessageDialog(this,
                "Syllabus uploaded/modified successfully!\n\n" +
                "Course: " + courseCode + "\n" +
                "File: " + fileName + "\n" +
                "Path: " + filePath + "\n\n" +
                "Note: If a syllabus already existed, it has been replaced.\n" +
                "In production, file would be stored in data/syllabi/ directory",
                "Upload/Modify Successful",
                javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void toggleEnrollment(int selectedRow) {
        DefaultTableModel model = (DefaultTableModel) tblCourses.getModel();
        String currentStatus = model.getValueAt(selectedRow, 4).toString(); // Status column
        
        String newStatus;
        if (currentStatus.equals("Open")) {
            newStatus = "Closed";
        } else {
            newStatus = "Open";
        }
        
        // Update table
        model.setValueAt(newStatus, selectedRow, 4);
        
        String courseCode = model.getValueAt(selectedRow, 0).toString();
        
        javax.swing.JOptionPane.showMessageDialog(this,
            "Enrollment " + newStatus.toLowerCase() + " for " + courseCode,
            "Enrollment Updated",
            javax.swing.JOptionPane.INFORMATION_MESSAGE);
        
        // TODO: In real implementation, update CourseOffer.setEnrollmentOpen() in database
    }
    
    private void editCourse(int selectedRow) {
        DefaultTableModel model = (DefaultTableModel) tblCourses.getModel();
        
        // Get current course data
        String courseCode = model.getValueAt(selectedRow, 0).toString();
        String courseName = model.getValueAt(selectedRow, 1).toString();
        String credits = model.getValueAt(selectedRow, 2).toString();
        String enrollment = model.getValueAt(selectedRow, 3).toString();
        String status = model.getValueAt(selectedRow, 4).toString();
        
        // Create input panel with form fields
        javax.swing.JPanel editPanel = new javax.swing.JPanel(new java.awt.GridLayout(5, 2, 10, 10));
        
        // Course Code (read-only)
        editPanel.add(new javax.swing.JLabel("Course Code:"));
        javax.swing.JTextField txtCode = new javax.swing.JTextField(courseCode);
        txtCode.setEditable(false);
        txtCode.setBackground(new java.awt.Color(240, 240, 240));
        editPanel.add(txtCode);
        
        // Course Name (editable)
        editPanel.add(new javax.swing.JLabel("Course Name:"));
        javax.swing.JTextField txtName = new javax.swing.JTextField(courseName);
        editPanel.add(txtName);
        
        // Credits (editable)
        editPanel.add(new javax.swing.JLabel("Credit Hours:"));
        javax.swing.JTextField txtCredits = new javax.swing.JTextField(credits);
        editPanel.add(txtCredits);
        
        // Enrollment (editable)
        editPanel.add(new javax.swing.JLabel("Enrollment:"));
        javax.swing.JTextField txtEnrollment = new javax.swing.JTextField(enrollment);
        editPanel.add(txtEnrollment);
        
        // Status (dropdown)
        editPanel.add(new javax.swing.JLabel("Status:"));
        String[] statusOptions = {"Open", "Closed"};
        javax.swing.JComboBox<String> cmbStatus = new javax.swing.JComboBox<>(statusOptions);
        cmbStatus.setSelectedItem(status);
        editPanel.add(cmbStatus);
        
        // Show edit dialog
        int result = javax.swing.JOptionPane.showConfirmDialog(
            this,
            editPanel,
            "Edit Course: " + courseCode,
            javax.swing.JOptionPane.OK_CANCEL_OPTION,
            javax.swing.JOptionPane.PLAIN_MESSAGE
        );
        
        // If user clicked OK, save changes
        if (result == javax.swing.JOptionPane.OK_OPTION) {
            try {
                // Validate credits
                int newCredits = Integer.parseInt(txtCredits.getText().trim());
                if (newCredits < 1 || newCredits > 8) {
                    javax.swing.JOptionPane.showMessageDialog(this,
                        "Credit hours must be between 1 and 8!",
                        "Invalid Input",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
                // Update table
                model.setValueAt(txtName.getText().trim(), selectedRow, 1);
                model.setValueAt(newCredits, selectedRow, 2);
                model.setValueAt(txtEnrollment.getText().trim(), selectedRow, 3);
                model.setValueAt(cmbStatus.getSelectedItem(), selectedRow, 4);
                
                javax.swing.JOptionPane.showMessageDialog(this,
                    "Course updated successfully!",
                    "Success",
                    javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
            } catch (NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(this,
                    "Please enter a valid number for credit hours!",
                    "Invalid Input",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
    }
}
